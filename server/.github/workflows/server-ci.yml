name: Server CI/CD

on:
  push:
    branches: [main]
    paths:
      - "server/**"
  pull_request:
    branches: [main]
    paths:
      - "server/**"

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov black pylint

      - name: Run linting
        run: |
          black . --check
          pylint $(git ls-files '*.py')

      - name: Run tests with coverage
        run: |
          pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./server/coverage.xml
          flags: server
          fail_ci_if_error: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/crypto-predictor-server:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/crypto-predictor-server:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/crypto-predictor-server:buildcache,mode=max
